{"ast":null,"code":"import _objectWithoutProperties from\"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";// import React, {useContext} from \"react\";\n// import {Route, Redirect} from \"react-router-dom\";\n// import AuthContext from \"../../context/auth/authContext\";\n// const PrivateRoute = ({component: Component, ...rest}) => {\n//   // const authContext = useContext(AuthContext);\n//   // const {isAuthenticated, loading} = authContext;\n//   // return (\n//   //   <Route\n//   //     {...rest}\n//   //     render={(props) =>\n//   //       !isAuthenticated && !loading ? (\n//   //         <Redirect to=\"/login\" />\n//   //       ) : (\n//   //         <Component {...props} />\n//   //       )\n//   //     }\n//   //   />\n//   // );\n//   const authContext = useContext(AuthContext);\n//   const {isAuthenticated, loading} = authContext;\n//   return (\n//     <Route\n//       {...rest}\n//       render={(props) =>\n//         !isAuthenticated && !loading ? (\n//           <Redirect to=\"/login\" />\n//         ) : (\n//           <Component {...props} />\n//         )\n//       }\n//     />\n//   );\n// };\n// export default PrivateRoute;\nimport React,{useContext}from'react';import{Route,Redirect}from'react-router-dom';import AuthContext from'../../context/auth/authContext';var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var authContext=useContext(AuthContext);var isAuthenticated=authContext.isAuthenticated,loading=authContext.loading;return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){return!isAuthenticated&&loading?/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"}):/*#__PURE__*/React.createElement(Component,props);}}));};export default PrivateRoute;","map":{"version":3,"sources":["D:/Rashid_Work/API Projects/contact-manager-api/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","Component","component","rest","authContext","isAuthenticated","loading","props"],"mappings":"0MAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAuC,IAAzBC,CAAAA,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,8CAC1D,GAAMC,CAAAA,WAAW,CAAGR,UAAU,CAACG,WAAD,CAA9B,CAD0D,GAElDM,CAAAA,eAFkD,CAErBD,WAFqB,CAElDC,eAFkD,CAEjCC,OAFiC,CAErBF,WAFqB,CAEjCE,OAFiC,CAG1D,mBACE,oBAAC,KAAD,kBACMH,IADN,EAEE,MAAM,CAAE,gBAAAI,KAAK,QACX,CAACF,eAAD,EAAoBC,OAApB,cACE,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EADF,cAGE,oBAAC,SAAD,CAAeC,KAAf,CAJS,EAFf,GADF,CAYD,CAfD,CAiBA,cAAeP,CAAAA,YAAf","sourcesContent":["// import React, {useContext} from \"react\";\r\n// import {Route, Redirect} from \"react-router-dom\";\r\n// import AuthContext from \"../../context/auth/authContext\";\r\n\r\n// const PrivateRoute = ({component: Component, ...rest}) => {\r\n//   // const authContext = useContext(AuthContext);\r\n//   // const {isAuthenticated, loading} = authContext;\r\n//   // return (\r\n//   //   <Route\r\n//   //     {...rest}\r\n//   //     render={(props) =>\r\n//   //       !isAuthenticated && !loading ? (\r\n//   //         <Redirect to=\"/login\" />\r\n//   //       ) : (\r\n//   //         <Component {...props} />\r\n//   //       )\r\n//   //     }\r\n//   //   />\r\n//   // );\r\n//   const authContext = useContext(AuthContext);\r\n//   const {isAuthenticated, loading} = authContext;\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={(props) =>\r\n//         !isAuthenticated && !loading ? (\r\n//           <Redirect to=\"/login\" />\r\n//         ) : (\r\n//           <Component {...props} />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\n// export default PrivateRoute;\r\n\r\n\r\nimport React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { isAuthenticated, loading } = authContext;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !isAuthenticated && loading ? (\r\n          <Redirect to='/login' />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}