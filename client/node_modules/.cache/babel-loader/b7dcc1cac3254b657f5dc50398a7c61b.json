{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactWork\\\\contact-manager-master\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport AlertContext from \"../../context/alerts/alertContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nfunction Register(props) {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    register,\n    loadUser,\n    clearErrors,\n    token,\n    isAuthenticated,\n    error\n  } = authContext;\n  const {\n    setAlert\n  } = alertContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    } //User with this email already exist.\n\n\n    if (error === \"User with this email already exist.\") {\n      setAlert(\"User with this email already exist.\", \"danger\");\n      clearErrors();\n    } //eslint-disable-next-line\n\n  }, [error, isAuthenticated]);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (name === \"\" || email === \"\" || password === \"\" || password2 === \"\") {\n      setAlert(\"Please enter all fields.\", \"danger\");\n    } else if (password !== password2) {\n      setAlert(\"Password does not match.\", \"danger\");\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n      console.log(\"token: \" + token);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Account \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password2\",\n    name: \"password2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    value: password2,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    class: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Register;","map":{"version":3,"sources":["F:/ReactWork/contact-manager-master/client/src/components/auth/Register.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Register","props","alertContext","authContext","register","loadUser","clearErrors","token","isAuthenticated","error","setAlert","history","push","user","setUser","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\nimport AlertContext from \"../../context/alerts/alertContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nfunction Register(props) {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const {\n    register,\n    loadUser,\n    clearErrors,\n    token,\n    isAuthenticated,\n    error,\n  } = authContext;\n\n  const {setAlert} = alertContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    //User with this email already exist.\n    if (error === \"User with this email already exist.\") {\n      setAlert(\"User with this email already exist.\", \"danger\");\n      clearErrors();\n    }\n    //eslint-disable-next-line\n  }, [error, isAuthenticated]);\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const {name, email, password, password2} = user;\n\n  const onChange = (e) => setUser({...user, [e.target.name]: e.target.value});\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (name === \"\" || email === \"\" || password === \"\" || password2 === \"\") {\n      setAlert(\"Please enter all fields.\", \"danger\");\n    } else if (password !== password2) {\n      setAlert(\"Password does not match.\", \"danger\");\n    } else {\n      register({name, email, password});\n      console.log(\"token: \" + token);\n    }\n  };\n\n  return (\n    <div>\n      <h1>\n        Account <span class=\"text-primary\">Register</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div class=\"form-group\">\n          <label htmlFor=\"name\" name=\"name\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label htmlFor=\"email\" name=\"email\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label htmlFor=\"password\" name=\"password\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label htmlFor=\"password2\" name=\"password2\">\n            Confirm Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"password2\"\n            value={password2}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"submit\"\n            value=\"Register\"\n            class=\"btn btn-primary btn-block\"\n          ></input>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}