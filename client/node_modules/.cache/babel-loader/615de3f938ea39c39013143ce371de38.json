{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./AuthReducer\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from \"../types\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //Load User\n\n  const loadUser = async () => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/user\", formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser(); //  console.log(res.data);\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"api/auth\", formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      clg;\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Logout User\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //Clear errors\n\n\n  const clearErrors = () => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loaded: state.loaded,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["D:/Rashid_Work/API Projects/contact-manager-api/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","AuthReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","clg","logout","clearErrors","loaded","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from \"react\";\r\nimport axios from \"axios\";\r\nimport AuthContext from \"./authContext\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n} from \"../types\";\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n    error: null,\r\n  };\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  //Load User\r\n  const loadUser = async () => {\r\n    setAuthToken(localStorage.token);\r\n\r\n    try {\r\n      const res = await axios.get(\"/api/auth\");\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Register User\r\n  const register = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/api/user\", formData, config);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      loadUser();\r\n      //  console.log(res.data);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: err.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Login User\r\n  const login = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"api/auth\", formData, config);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      clg\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({type: LOGIN_FAIL, payload: err.response.data.msg});\r\n    }\r\n  };\r\n\r\n  //Logout User\r\n  const logout = () => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n  };\r\n\r\n  //Clear errors\r\n  const clearErrors = () => {\r\n    dispatch({type: CLEAR_ERRORS});\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        user: state.user,\r\n        loaded: state.loaded,\r\n        error: state.error,\r\n        register,\r\n        loadUser,\r\n        login,\r\n        logout,\r\n        clearErrors,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}