{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\n// import React, {useContext} from \"react\";\n// import {Route, Redirect} from \"react-router-dom\";\n// import AuthContext from \"../../context/auth/authContext\";\n// const PrivateRoute = ({component: Component, ...rest}) => {\n//   // const authContext = useContext(AuthContext);\n//   // const {isAuthenticated, loading} = authContext;\n//   // return (\n//   //   <Route\n//   //     {...rest}\n//   //     render={(props) =>\n//   //       !isAuthenticated && !loading ? (\n//   //         <Redirect to=\"/login\" />\n//   //       ) : (\n//   //         <Component {...props} />\n//   //       )\n//   //     }\n//   //   />\n//   // );\n//   const authContext = useContext(AuthContext);\n//   const {isAuthenticated, loading} = authContext;\n//   return (\n//     <Route\n//       {...rest}\n//       render={(props) =>\n//         !isAuthenticated && !loading ? (\n//           <Redirect to=\"/login\" />\n//         ) : (\n//           <Component {...props} />\n//         )\n//       }\n//     />\n//   );\n// };\n// export default PrivateRoute;\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const authContext = useContext(AuthContext);\n  const {\n    isAuthenticated,\n    loading\n  } = authContext;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["D:/Rashid_Work/API Projects/contact-manager-api/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","rest","authContext","isAuthenticated","loading","props"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,QAAMC,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B;AACA,QAAM;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BF,WAArC;AACA,sBACE,oBAAC,KAAD,oBACMD,IADN;AAEE,IAAA,MAAM,EAAEI,KAAK,IACX,CAACF,eAAD,IAAoB,CAACC,OAArB,gBACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAfD;;AAiBA,eAAeP,YAAf","sourcesContent":["// import React, {useContext} from \"react\";\r\n// import {Route, Redirect} from \"react-router-dom\";\r\n// import AuthContext from \"../../context/auth/authContext\";\r\n\r\n// const PrivateRoute = ({component: Component, ...rest}) => {\r\n//   // const authContext = useContext(AuthContext);\r\n//   // const {isAuthenticated, loading} = authContext;\r\n//   // return (\r\n//   //   <Route\r\n//   //     {...rest}\r\n//   //     render={(props) =>\r\n//   //       !isAuthenticated && !loading ? (\r\n//   //         <Redirect to=\"/login\" />\r\n//   //       ) : (\r\n//   //         <Component {...props} />\r\n//   //       )\r\n//   //     }\r\n//   //   />\r\n//   // );\r\n//   const authContext = useContext(AuthContext);\r\n//   const {isAuthenticated, loading} = authContext;\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={(props) =>\r\n//         !isAuthenticated && !loading ? (\r\n//           <Redirect to=\"/login\" />\r\n//         ) : (\r\n//           <Component {...props} />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\n// export default PrivateRoute;\r\n\r\n\r\nimport React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { isAuthenticated, loading } = authContext;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to='/login' />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}