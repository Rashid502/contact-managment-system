{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport AlertContext from '../../context/alerts/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nfunction Register() {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    register,\n    loadUser,\n    clearErrors,\n    token,\n    isAuthenticated,\n    error\n  } = authContext;\n  const {\n    setAlert\n  } = alertContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.hi;\n    } //User with this email already exist.\n\n\n    if (error === 'User with this email already exist.') {\n      setAlert('User with this email already exist.', 'danger');\n      clearErrors();\n    }\n  });\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || email === '' || password === '' || password2 === '') {\n      setAlert('Please enter all fields.', 'danger');\n    } else if (password !== password2) {\n      setAlert('Password does not match.', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n      console.log('token: ' + token);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Account \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password2\",\n    name: \"password2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    value: password2,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    class: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Register;","map":{"version":3,"sources":["D:/Rashid_Work/API Projects/contact-manager-api/client/src/components/auth/Register.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Register","alertContext","authContext","register","loadUser","clearErrors","token","isAuthenticated","error","setAlert","props","hi","user","setUser","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\r\nimport AlertContext from '../../context/alerts/alertContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nfunction Register() {\r\n\r\n  const alertContext = useContext(AlertContext);\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const {register, loadUser,clearErrors, token,isAuthenticated, error} = authContext;\r\n\r\n  const {setAlert} = alertContext;\r\n\r\n  useEffect(() =>{\r\n    if(isAuthenticated){\r\n      props.hi\r\n    }\r\n    //User with this email already exist.\r\n    if(error === 'User with this email already exist.'){\r\n      setAlert('User with this email already exist.', 'danger');\r\n      clearErrors();\r\n    }\r\n  })\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const {name, email, password, password2} = user;\r\n\r\n  const onChange = (e) => setUser({...user, [e.target.name]: e.target.value});\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(name === '' || email === '' || password === '' || password2 === '') {\r\n      setAlert('Please enter all fields.', 'danger', );\r\n     }else if(password !== password2){\r\n      setAlert('Password does not match.', 'danger', );\r\n     }else{\r\n       register({name, email, password});\r\n      console.log('token: '+token);\r\n     }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Account <span class=\"text-primary\">Register</span>\r\n      </h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"name\" name=\"name\">\r\n            Name\r\n          </label>\r\n          <input type=\"text\" name=\"name\" value={name} onChange={onChange} required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"email\" name=\"email\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" name=\"email\" value={email} onChange={onChange} required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"password\" name=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"password2\" name=\"password2\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n            class=\"btn btn-primary btn-block\"\r\n          ></input>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}