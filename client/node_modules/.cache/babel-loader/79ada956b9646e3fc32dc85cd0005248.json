{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactWork\\\\contact-manager-master\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport AlertContext from \"../../context/alerts/alertContext\";\nimport ContactContext from \"../../context/contacts/contactContext\";\n\nfunction Login(props) {\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext);\n  const contactContext = useContext(ContactContext);\n  const {\n    login,\n    clearErrors,\n    isAuthenticated,\n    error\n  } = authContext;\n  const {\n    getContacts\n  } = contactContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n\n    if (error === \"Invalid Credentials.\") {\n      alertContext.setAlert(error);\n      clearErrors();\n    } //eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === \"\" || password === \"\") {\n      alertContext.setAlert(\"Please fill in all fields\", \"danger\");\n    } else {\n      login({\n        email,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Account \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    class: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Login;","map":{"version":3,"sources":["F:/ReactWork/contact-manager-master/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AuthContext","AlertContext","ContactContext","Login","props","authContext","alertContext","contactContext","login","clearErrors","isAuthenticated","error","getContacts","history","push","setAlert","user","setUser","email","password","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport AlertContext from \"../../context/alerts/alertContext\";\nimport ContactContext from \"../../context/contacts/contactContext\";\n\nfunction Login(props) {\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext);\n  const contactContext = useContext(ContactContext);\n\n  const {login, clearErrors, isAuthenticated, error} = authContext;\n  const {getContacts} = contactContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    if (error === \"Invalid Credentials.\") {\n      alertContext.setAlert(error);\n      clearErrors();\n    }\n    //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const {email, password} = user;\n\n  const onChange = (e) => setUser({...user, [e.target.name]: e.target.value});\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (email === \"\" || password === \"\") {\n      alertContext.setAlert(\"Please fill in all fields\", \"danger\");\n    } else {\n      login({\n        email,\n        password,\n      });\n    }\n  };\n\n  \n\n  return (\n    <div>\n      <h1>\n        Account <span class=\"text-primary\">Login</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div class=\"form-group\">\n          <label htmlFor=\"email\" name=\"email\">\n            Email\n          </label>\n          <input type=\"email\" name=\"email\" value={email} onChange={onChange} />\n        </div>\n        <div class=\"form-group\">\n          <label htmlFor=\"password\" name=\"password\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            class=\"btn btn-primary btn-block\"\n          ></input>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}