{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\src\\\\context\\\\contacts\\\\ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./ContactReducer\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_CONTACTS } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Get contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //ADD_CONTACT\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //DELETE_CONTACT\n\n\n  const deleteContact = async id => {\n    trycat;\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Clear Contacts\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; //SET_CURRENT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //CLEAR_CURRENT\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //UPDATE_CONTACT\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //FILTER_CONTACTS\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //CLEAR_FILTER\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      updateContact,\n      setCurrent,\n      clearCurrent,\n      filterContacts,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["D:/Rashid_Work/API Projects/contact-manager-api/client/src/context/contacts/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","trycat","clearContacts","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from \"react\";\r\nimport axios from \"axios\";\r\nimport ContactContext from \"./contactContext\";\r\nimport contactReducer from \"./ContactReducer\";\r\n\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  CLEAR_CONTACTS,\r\n} from \"../types\";\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: null,\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n  };\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  //Get contacts\r\n  const getContacts = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/contacts\");\r\n      dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  //ADD_CONTACT\r\n  const addContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/contacts\", contact, config);\r\n      dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  //DELETE_CONTACT\r\n\r\n  const deleteContact = async (id) => {\r\n    trycat\r\n    dispatch({type: DELETE_CONTACT, payload: id});\r\n  };\r\n\r\n  //Clear Contacts\r\n  const clearContacts = () => {\r\n    dispatch({type: CLEAR_CONTACTS});\r\n  };\r\n\r\n  //SET_CURRENT\r\n  const setCurrent = (contact) => {\r\n    dispatch({type: SET_CURRENT, payload: contact});\r\n  };\r\n  //CLEAR_CURRENT\r\n  const clearCurrent = () => {\r\n    dispatch({type: CLEAR_CURRENT});\r\n  };\r\n\r\n  //UPDATE_CONTACT\r\n  const updateContact = (contact) => {\r\n    dispatch({type: UPDATE_CONTACT, payload: contact});\r\n  };\r\n\r\n  //FILTER_CONTACTS\r\n  const filterContacts = (text) => {\r\n    dispatch({type: FILTER_CONTACTS, payload: text});\r\n  };\r\n\r\n  //CLEAR_FILTER\r\n  const clearFilter = () => {\r\n    dispatch({type: CLEAR_FILTER});\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        addContact,\r\n        deleteContact,\r\n        updateContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        filterContacts,\r\n        clearFilter,\r\n        getContacts,\r\n        clearContacts,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}