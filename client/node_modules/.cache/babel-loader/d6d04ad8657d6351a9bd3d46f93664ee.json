{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from\"react\";import{CSSTransition,TransitionGroup}from\"react-transition-group\";import ContactContext from\"../../context/contacts/contactContext\";import Spinner from\"../layout/Spinner\";import ContactItem from\"./ContactItem\";import ContactFilter from\"./ContactFilter\";var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();//eslint-disable-next-line\n},[]);return/*#__PURE__*/React.createElement(Fragment,null,contacts!==null&&!loading?/*#__PURE__*/React.createElement(TransitionGroup,null,filtered!=null?filtered.map(function(contact){return/*#__PURE__*/React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},/*#__PURE__*/React.createElement(ContactItem,{contact:contact}));}):contacts.length===0?/*#__PURE__*/React.createElement(\"div\",{className:\"text-primary\"},\"Pleas add Contact.\"):contacts.map(function(contact){return/*#__PURE__*/React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},/*#__PURE__*/React.createElement(ContactItem,{contact:contact}));})):/*#__PURE__*/React.createElement(Spinner,null));};export default Contacts;","map":{"version":3,"sources":["D:/Rashid_Work/API Projects/contact-manager-api/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactContext","Spinner","ContactItem","ContactFilter","Contacts","contactContext","contacts","filtered","getContacts","loading","map","contact","_id","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,UAAzB,CAAqCC,SAArC,KAAqD,OAArD,CACA,OAAQC,aAAR,CAAuBC,eAAvB,KAA6C,wBAA7C,CACA,MAAOC,CAAAA,cAAP,KAA2B,uCAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,cAAc,CAAGT,UAAU,CAACI,cAAD,CAAjC,CADqB,GAEdM,CAAAA,QAFc,CAE8BD,cAF9B,CAEdC,QAFc,CAEJC,QAFI,CAE8BF,cAF9B,CAEJE,QAFI,CAEMC,WAFN,CAE8BH,cAF9B,CAEMG,WAFN,CAEmBC,OAFnB,CAE8BJ,cAF9B,CAEmBI,OAFnB,CAIrBZ,SAAS,CAAC,UAAM,CACdW,WAAW,GACX;AACD,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACE,oBAAC,QAAD,MACGF,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,cACC,oBAAC,eAAD,MACGF,QAAQ,EAAI,IAAZ,CACCA,QAAQ,CAACG,GAAT,CAAa,SAACC,OAAD,qBACX,oBAAC,aAAD,EAAe,GAAG,CAAEA,OAAO,CAACC,GAA5B,CAAiC,OAAO,CAAE,GAA1C,CAA+C,UAAU,CAAC,MAA1D,eACE,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EADF,CADW,EAAb,CADD,CAMGL,QAAQ,CAACO,MAAT,GAAoB,CAApB,cACF,2BAAK,SAAS,CAAC,cAAf,uBADE,CAGFP,QAAQ,CAACI,GAAT,CAAa,SAACC,OAAD,qBACX,oBAAC,aAAD,EAAe,GAAG,CAAEA,OAAO,CAACC,GAA5B,CAAiC,OAAO,CAAE,GAA1C,CAA+C,UAAU,CAAC,MAA1D,eACE,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EADF,CADW,EAAb,CAVJ,CADD,cAmBC,oBAAC,OAAD,MApBJ,CADF,CAyBD,CAlCD,CAoCA,cAAeP,CAAAA,QAAf","sourcesContent":["import React, {Fragment, useContext, useEffect} from \"react\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport ContactContext from \"../../context/contacts/contactContext\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport ContactFilter from \"./ContactFilter\";\r\n\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const {contacts, filtered, getContacts, loading} = contactContext;\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null && !loading ? (\r\n        <TransitionGroup>\r\n          {filtered != null ? (\r\n            filtered.map((contact) => (\r\n              <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\r\n                <ContactItem contact={contact} />\r\n              </CSSTransition>\r\n            ))\r\n          ) : contacts.length === 0 ? (\r\n            <div className=\"text-primary\">Pleas add Contact.</div>\r\n          ) : (\r\n            contacts.map((contact) => (\r\n              <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\r\n                <ContactItem contact={contact} />\r\n              </CSSTransition>\r\n            ))\r\n          )}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}