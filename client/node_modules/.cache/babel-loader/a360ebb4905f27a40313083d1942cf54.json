{"ast":null,"code":"import _defineProperty from\"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";import ContactContext from\"../../context/contacts/contactContext\";var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,updateContact=contactContext.updateContact,current=contactContext.current,clearCurrent=contactContext.clearCurrent;useEffect(function(){if(current===null){setContact({name:\"\",email:\"\",phone:\"\",type:\"personal\"});}else{setContact(current);}},[contactContext,current]);var _useState=useState({name:\"\",email:\"\",phone:\"\",type:\"personal\"}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);clearCurrent();}setContact({name:\"\",email:\"\",phone:\"\",type:\"personal\"});};var clearAll=function clearAll(){clearCurrent();};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},\" \",current?\"Update Contact\":\"Add Contact\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"name\",value:name,placeholder:\"Name\",onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"email\",value:email,placeholder:\"Email\",onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"phone\",value:phone,placeholder:\"Phone\",onChange:onChange}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type===\"personal\",onChange:onChange}),\" \",\"Personal\",\" \",/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type===\"professional\",onChange:onChange}),\"Professional\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:current?\"Update Contact\":\"Add Contact\",class:\"btn btn-primary btn-block\"})),current&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"Clear\")));};export default ContactForm;","map":{"version":3,"sources":["D:/Rashid_Work/API Projects/contact-manager-api/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","updateContact","current","clearCurrent","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\r\nimport ContactContext from \"../../context/contacts/contactContext\";\r\n\r\nconst ContactForm = () => {\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  const {addContact, updateContact, current, clearCurrent} = contactContext;\r\n\r\n  useEffect(() => {\r\n    if (current === null) {\r\n      setContact({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        type: \"personal\",\r\n      });\r\n    } else {\r\n      setContact(current);\r\n    }\r\n  }, [contactContext, current]);\r\n\r\n  const [contact, setContact] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    type: \"personal\",\r\n  });\r\n\r\n  const {name, email, phone, type} = contact;\r\n\r\n  const onChange = (e) =>\r\n    setContact({...contact, [e.target.name]: e.target.value});\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (current === null) {\r\n      addContact(contact);\r\n    } else {\r\n      updateContact(contact);\r\n      clearCurrent();\r\n    }\r\n    setContact({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      type: \"personal\",\r\n    });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    clearCurrent();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className=\"text-primary\">\r\n        {\" \"}\r\n        {current ? \"Update Contact\" : \"Add Contact\"}\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        placeholder=\"Name\"\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        placeholder=\"Email\"\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"phone\"\r\n        value={phone}\r\n        placeholder=\"Phone\"\r\n        onChange={onChange}\r\n      />\r\n      <div>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"type\"\r\n          value=\"personal\"\r\n          checked={type === \"personal\"}\r\n          onChange={onChange}\r\n        />{\" \"}\r\n        Personal{\" \"}\r\n        <input\r\n          type=\"radio\"\r\n          name=\"type\"\r\n          value=\"professional\"\r\n          checked={type === \"professional\"}\r\n          onChange={onChange}\r\n        />\r\n        Professional\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"submit\"\r\n          value={current ? \"Update Contact\" : \"Add Contact\"}\r\n          class=\"btn btn-primary btn-block\"\r\n        />\r\n      </div>\r\n      {current && (\r\n        <div>\r\n          <button className=\"btn btn-light btn-block\" onClick={clearAll}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}