{"ast":null,"code":"import React,{useEffect,useContext,useRef}from\"react\";import ContactContext from\"../../context/contacts/contactContext\";function ContactFilter(){var contactContext=useContext(ContactContext);var filterContacts=contactContext.filterContacts,clearFilter=contactContext.clearFilter,filtered=contactContext.filtered;var text=useRef(\"\");useEffect(function(){if(filtered===null){text.current.value=\"\";}});var onChange=function onChange(e){if(text.current.value!==\"\"){filterContacts(e.target.value);}else{clearFilter();}};return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{ref:text,type:\"text\",placeholder:\"Filter Contacts...\",onChange:onChange}));}export default ContactFilter;","map":{"version":3,"sources":["D:/Rashid_Work/API Projects/contact-manager-api/client/src/components/contacts/ContactFilter.js"],"names":["React","useEffect","useContext","useRef","ContactContext","ContactFilter","contactContext","filterContacts","clearFilter","filtered","text","current","value","onChange","e","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,UAA1B,CAAsCC,MAAtC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,cAAP,KAA2B,uCAA3B,CAEA,QAASC,CAAAA,aAAT,EAAyB,CACvB,GAAMC,CAAAA,cAAc,CAAGJ,UAAU,CAACE,cAAD,CAAjC,CADuB,GAGhBG,CAAAA,cAHgB,CAGyBD,cAHzB,CAGhBC,cAHgB,CAGAC,WAHA,CAGyBF,cAHzB,CAGAE,WAHA,CAGaC,QAHb,CAGyBH,cAHzB,CAGaG,QAHb,CAKvB,GAAMC,CAAAA,IAAI,CAAGP,MAAM,CAAC,EAAD,CAAnB,CAEAF,SAAS,CAAC,UAAM,CACd,GAAIQ,QAAQ,GAAK,IAAjB,CAAuB,CACrBC,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACD,CACF,CAJQ,CAAT,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtB,GAAIJ,IAAI,CAACC,OAAL,CAAaC,KAAb,GAAuB,EAA3B,CAA+B,CAC7BL,cAAc,CAACO,CAAC,CAACC,MAAF,CAASH,KAAV,CAAd,CACD,CAFD,IAEO,CACLJ,WAAW,GACZ,CACF,CAND,CAQA,mBACE,6CACE,6BACE,GAAG,CAAEE,IADP,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,oBAHd,CAIE,QAAQ,CAAEG,QAJZ,EADF,CADF,CAUD,CAED,cAAeR,CAAAA,aAAf","sourcesContent":["import React, {useEffect, useContext, useRef} from \"react\";\r\nimport ContactContext from \"../../context/contacts/contactContext\";\r\n\r\nfunction ContactFilter() {\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  const {filterContacts, clearFilter, filtered} = contactContext;\r\n\r\n  const text = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    if (filtered === null) {\r\n      text.current.value = \"\";\r\n    }\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    if (text.current.value !== \"\") {\r\n      filterContacts(e.target.value);\r\n    } else {\r\n      clearFilter();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        ref={text}\r\n        type=\"text\"\r\n        placeholder=\"Filter Contacts...\"\r\n        onChange={onChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactFilter;\r\n"]},"metadata":{},"sourceType":"module"}