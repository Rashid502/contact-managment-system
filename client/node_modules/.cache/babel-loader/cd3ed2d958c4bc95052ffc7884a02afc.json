{"ast":null,"code":"import _defineProperty from\"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\Rashid_Work\\\\API Projects\\\\contact-manager-api\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";import AuthContext from\"../../context/auth/authContext\";import AlertContext from\"../../context/alerts/alertContext\";import ContactContext from\"../../context/contacts/contactContext\";function Login(props){var authContext=useContext(AuthContext);var alertContext=useContext(AlertContext);var contactContext=useContext(ContactContext);var login=authContext.login,clearErrors=authContext.clearErrors,isAuthenticated=authContext.isAuthenticated,error=authContext.error;var getContacts=contactContext.getContacts;useEffect(function(){if(isAuthenticated){props.history.push(\"/\");}if(error===\"Invalid Credentials.\"){alertContext.setAlert(error);clearErrors();}//eslint-disable-next-line\n},[error,isAuthenticated,props.history]);var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var email=user.email,password=user.password;var onChange=function onChange(e){return setUser(_objectSpread(_objectSpread({},user),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(email===\"\"||password===\"\"){alertContext.setAlert(\"Please fill in all fields\",\"danger\");}else{login({email:email,password:password});}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Account \",/*#__PURE__*/React.createElement(\"span\",{class:\"text-primary\"},\"Login\")),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{class:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\",name:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"email\",value:email,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{class:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\",name:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",name:\"password\",value:password,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Login\",class:\"btn btn-primary btn-block\"}))));}export default Login;","map":{"version":3,"sources":["D:/Rashid_Work/API Projects/contact-manager-api/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AuthContext","AlertContext","ContactContext","Login","props","authContext","alertContext","contactContext","login","clearErrors","isAuthenticated","error","getContacts","history","push","setAlert","email","password","user","setUser","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport AlertContext from \"../../context/alerts/alertContext\";\r\nimport ContactContext from \"../../context/contacts/contactContext\";\r\n\r\nfunction Login(props) {\r\n  const authContext = useContext(AuthContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  const {login, clearErrors, isAuthenticated, error} = authContext;\r\n  const {getContacts} = contactContext;\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push(\"/\");\r\n    }\r\n    if (error === \"Invalid Credentials.\") {\r\n      alertContext.setAlert(error);\r\n      clearErrors();\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const {email, password} = user;\r\n\r\n  const onChange = (e) => setUser({...user, [e.target.name]: e.target.value});\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\") {\r\n      alertContext.setAlert(\"Please fill in all fields\", \"danger\");\r\n    } else {\r\n      login({\r\n        email,\r\n        password,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Account <span class=\"text-primary\">Login</span>\r\n      </h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"email\" name=\"email\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" name=\"email\" value={email} onChange={onChange} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"password\" name=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Login\"\r\n            class=\"btn btn-primary btn-block\"\r\n          ></input>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}